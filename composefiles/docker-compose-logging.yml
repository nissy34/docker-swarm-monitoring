version: "3"

services:
    
    elasticsearch:
        image: elasticsearch:7.6.2
        networks:
            - logging
        volumes:
            - ../dockerdata/docker-swarm-monitoring/dockerdata/elasticsearch/data:/usr/share/elasticsearch/data
        labels:
            com.docker.stack.namespace: "logging"
            com.docker.service.name: "elasticsearch"
        command: elasticsearch -Etransport.host=127.0.0.1 -Ebootstrap.memory_lock=false
        deploy:
            mode: replicated
            placement:
                constraints:
                - "node.role==manager"
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: none
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "logging"
                com.docker.service.name: "elasticsearch"

    curator:
        image: robinong79/docker-elasticsearch-curator:v1.0
        networks:
            - logging
        environment:
            - ELASTICSEARCH_HOST=elasticsearch
            - ELASTICSEARCH_PORT=9200
            - INTERVAL_IN_HOURS=12
        volumes:
            - ../dockerconfig/docker-swarm-monitoring/dockerdata/curator:/var/curator
        labels:
            com.docker.stack.namespace: "logging"
            com.docker.service.name: "curator"
        deploy:
            mode: replicated
            placement:
                constraints:
                - "node.role==manager"
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: none
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "logging"
                com.docker.service.name: "curator"                   

    logstash:

        image: logstash:7.6.2
        depends_on:
            - elasticsearch
        ports:
            - "12201:12201/udp"         
            - "8080:8080"
        volumes:
            - ../dockerconfig/docker-swarm-monitoring/dockerdata/logstash/config:/config
            - ../dockerconfig/docker-swarm-monitoring/dockerdata/logstash/patterns:/opt/logstash/extra_patterns
        networks:
            - logging
        # command: -e "input { gelf {} } output { elasticsearch { hosts => ['elasticsearch']} stdout {} }"
        command: logstash -f /config
        labels:
            com.docker.stack.namespace: "logging"
            com.docker.service.name: "logstash"
        deploy:
            mode: replicated
            placement:
                constraints:
                - "node.role==manager"
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: none
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "logging"
                com.docker.service.name: "logstash"

    kibana:
        image: kibana:7.6.2
        depends_on:
            - elasticsearch        
        ports:
            - "5601:5601"          
        networks:
            - logging
        environment:
            - ELASTICSEARCH_URL=http://elasticsearch:9200
        labels:
            com.docker.stack.namespace: "logging"
            com.docker.service.name: "kibana"
        deploy:
            mode: replicated
            placement:
                constraints:
                - "node.role==manager"
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: none
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "logging"
                com.docker.service.name: "kibana"                

networks:
    logging:
        external: true

